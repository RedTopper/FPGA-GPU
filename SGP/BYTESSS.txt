; load int constant 1
ldilo               v4, 0x0001
ldihi               v5, 0x0000
or                  v4, v4, v5
; load int constant 0
ldilo               v5, 0x0000
ldihi               v6, 0x0000
or                  v5, v5, v6
; load pointer to address 0xe0000000: %MVP a uniform %mat4v4float (16 words)
ldilo               v6, 0x0000
ldihi               v7, 0xe000
or                  v6, v6, v7
; load fixed-point constant 1
ldilo               v7, 0x0000
ldihi               v8, 0x0001
or                  v7, v7, v8
; load fixed-point constant 0
ldilo               v8, 0x0000
ldihi               v9, 0x0000
or                  v8, v8, v9
; load variable %MVP
ld                  v10, [v6 + 0]
insert              v9, v9, v10, x
ld                  v10, [v6 + 4]
insert              v9, v9, v10, y
ld                  v10, [v6 + 8]
insert              v9, v9, v10, z
ld                  v10, [v6 + 12]
insert              v9, v9, v10, w
ld                  v11, [v6 + 16]
insert              v10, v10, v11, x
ld                  v11, [v6 + 20]
insert              v10, v10, v11, y
ld                  v11, [v6 + 24]
insert              v10, v10, v11, z
ld                  v11, [v6 + 28]
insert              v10, v10, v11, w
ld                  v12, [v6 + 32]
insert              v11, v11, v12, x
ld                  v12, [v6 + 36]
insert              v11, v11, v12, y
ld                  v12, [v6 + 40]
insert              v11, v11, v12, z
ld                  v12, [v6 + 44]
insert              v11, v11, v12, w
ld                  v13, [v6 + 48]
insert              v12, v12, v13, x
ld                  v13, [v6 + 52]
insert              v12, v12, v13, y
ld                  v13, [v6 + 56]
insert              v12, v12, v13, z
ld                  v13, [v6 + 60]
insert              v12, v12, v13, w
; read 'in' variable %vertexPosition_modelspace at location 0
infifo              v14, 0
insert              v13, v13, v14, x
infifo              v14, 1
insert              v13, v13, v14, y
infifo              v14, 2
insert              v13, v13, v14, z
; extract element from composite
swizzle             v14, v13, xxxx
; extract element from composite
swizzle             v15, v13, yyyy
; extract element from composite
swizzle             v16, v13, zzzz
; construct composite vector from elements
insert              v17, v17, v14, x
insert              v17, v17, v15, y
insert              v17, v17, v16, z
insert              v17, v17, v7, w
; multiply matrix times vector
ldilo               v18, 0x0000
swizzle             v19, v17, xxxx
fmul                v19, v19, v9
fadd                v18, v18, v19
swizzle             v19, v17, yyyy
fmul                v19, v19, v10
fadd                v18, v18, v19
swizzle             v19, v17, zzzz
fmul                v19, v19, v11
fadd                v18, v18, v19
swizzle             v19, v17, wwww
fmul                v19, v19, v12
fadd                v18, v18, v19
; write variable %29 to shadow output location 0
swizzle             v0, v18, xyzw
; read 'in' variable %color at location 1
infifo              v20, 4
insert              v19, v19, v20, x
infifo              v20, 5
insert              v19, v19, v20, y
infifo              v20, 6
insert              v19, v19, v20, z
; extract element from composite
swizzle             v20, v19, xxxx
; extract element from composite
swizzle             v21, v19, yyyy
; extract element from composite
swizzle             v22, v19, zzzz
; construct composite vector from elements
insert              v23, v23, v20, x
insert              v23, v23, v21, y
insert              v23, v23, v22, z
insert              v23, v23, v8, w
; write variable %39 to shadow output location 1
swizzle             v1, v23, xyzw
; write the outfifo shadow registers
outfifo             0, v0
swizzle             v5, v0, yyyy
outfifo             1, v5
swizzle             v5, v0, zzzz
outfifo             2, v5
swizzle             v5, v0, wwww
outfifo             3, v5
outfifo             4, v1
swizzle             v5, v1, yyyy
outfifo             5, v5
swizzle             v5, v1, zzzz
outfifo             6, v5
swizzle             v5, v1, wwww
outfifo             7, v5
outfifo             8, v2
swizzle             v5, v2, yyyy
outfifo             9, v5
swizzle             v5, v2, zzzz
outfifo             10, v5
swizzle             v5, v2, wwww
outfifo             11, v5
outfifo             12, v3
swizzle             v5, v3, yyyy
outfifo             13, v5
swizzle             v5, v3, zzzz
outfifo             14, v5
swizzle             v5, v3, wwww
outfifo             15, v5
; end the program
done
